# vim: set ft=conf:

# ----------------------------------------------------------------------
# tmux plugin manager
# ----------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
run '~/.tmux/plugins/tpm/tpm'

# ----------------------------------------------------------------------
# personal settings
# ----------------------------------------------------------------------

# number of windows
set-option -g base-index 1
set-option -g renumber-windows on

set-option -g history-limit 30000
set-option -g set-titles on
set-window-option -g automatic-rename on
set-window-option -g monitor-activity on
# set-option -g status-utf8 on
set-option -g status-interval 1

# escape time
set -sg escape-time 1

set-option -g allow-rename off

# reload config file
bind r source-file ~/.tmux.conf

# --------------------
# looks of status bar
# --------------------

# color code: http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html

# support 256 colors
set-option -g default-terminal "xterm"

# potision of status bar
set-option -g status-position bottom

## Colorscheme: Solarized {{{2

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

set -g pane-border-fg black
set -g pane-active-border-fg brightred

# bell
# set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red
#}}}

set-option -g status-right "[#(tmux show-options -g prefix)] [%Y/%m/%d(%a) %T]"
set-option -g status-right-length 50
set-option -g status-left-length 50

# to make current_path is default
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
if-shell "uname | grep -q Darwin" 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Linux" 'bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"'

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
if-shell "uname | grep -q Darwin" 'bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Darwin" 'bind-key -t vi-copy Enter copy-pipe "xclip -in -selection clipboard"'

# reattach on OS X
if-shell "uname | grep -q Darwin" 'set -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"'

# bindkey for copy mode
bind-key -t vi-copy Escape clear-selection
bind-key -t vi-copy C-c cancel
bind-key -t vi-copy C-v rectangle-toggle
bind-key -t vi-copy V select-line
bind-key -t vi-copy C-a start-of-line
bind-key -t vi-copy C-e end-of-line
bind-key -t vi-copy w next-word
bind-key -t vi-copy e next-word-end
bind-key -t vi-copy b previous-word
bind-key -t vi-copy H top-line
bind-key -t vi-copy L bottom-line
bind-key -t vi-copy / search-forward
bind-key -t vi-copy ? search-backward
bind-key -t vi-copy C-b page-up
bind-key -t vi-copy C-f page-down
bind-key -t vi-copy C-u scroll-up
bind-key -t vi-copy C-d scroll-down

# move pane
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# scroll with mouse
# you can select text by pushing option key
# set-window-option -g mode-mouse on
# set-option -g mouse-select-window on
# set-option -g mouse-select-pane on
# set-option -g mouse-resize-pane on
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# bind-key -n C-o select-pane -t :.+
# bind-key -n C-@ select-pane -t :.+

# Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# # Screensaver
# set -g lock-after-time 600
# set -g lock-command "cmatrix -s -b"
# bind ^X lock-server

unbind C-b
set-option -g prefix C-j
