#!/usr/bin/env python

import argparse
import glob
import re

import imageio
import tqdm


def natural_sort(l):
    convert = lambda text: int(text) if text.isdigit() else text.lower()  # NOQA
    alphanum_key = lambda key: [convert(c) for c in re.split('([0-9]+)', key)]  # NOQA
    return sorted(l, key=alphanum_key)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('out_file')
    parser.add_argument('-i', '--input-files', default='*.jpg',
                        help="Input patterns like '*.jpg'")
    parser.add_argument('-r', '--rate', type=int, default=1)
    parser.add_argument('--fixlowfps', action='store_true')
    args = parser.parse_args()

    args.input_files = glob.glob(args.input_files)

    n_times_write = 1
    if args.fixlowfps and args.rate < 10:
        n_times_write = 10 // args.rate
        args.rate = 10

    writer = imageio.get_writer(args.out_file, fps=args.rate)
    for f in tqdm.tqdm(natural_sort(args.input_files), ncols=80):
        frame = imageio.imread(f)
        for _ in range(n_times_write):
            writer.append_data(frame)

    print('==> Saved video to: %s' % args.out_file)


if __name__ == '__main__':
    main()
