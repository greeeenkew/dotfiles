#!/usr/bin/env python

from __future__ import print_function

import argparse
import os
import os.path as osp
import time

import pandas as pd


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('log_file')
    parser.add_argument('--all', action='store_true')
    args = parser.parse_args()

    log_file = args.log_file
    show_all = args.all

    pd.set_option('display.float_format', lambda x: '%.3f' % x)

    while True:
        try:
            ext = osp.splitext(log_file)[-1]
            if ext == '.json':
                df = pd.read_json(log_file)
            elif ext == '.csv':
                df = pd.read_csv(log_file)
            df = df.set_index(['epoch', 'iteration'])
            print(chr(27) + "[2J")
            print(df.tail(n=10))
            print()
            print(pd.DataFrame([df.max(), df.min()], index=['max', 'min']))
            time.sleep(1)
        except KeyboardInterrupt:
            break
        except:
            pass


if __name__ == '__main__':
    main()
